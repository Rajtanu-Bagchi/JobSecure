{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  theme: localStorage.getItem('theme') || 'light',\n  sidebarOpen: false,\n  notifications: [],\n  isLoading: false,\n  showTour: localStorage.getItem('showTour') !== 'false' // Default to true for new users\n};\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', state.theme);\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n      localStorage.setItem('theme', action.payload);\n    },\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    completeTour: state => {\n      state.showTour = false;\n      localStorage.setItem('showTour', 'false');\n    },\n    resetTour: state => {\n      state.showTour = true;\n      localStorage.setItem('showTour', 'true');\n    }\n  }\n});\nexport const {\n  toggleTheme,\n  setTheme,\n  toggleSidebar,\n  setSidebarOpen,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  setLoading,\n  completeTour,\n  resetTour\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","theme","localStorage","getItem","sidebarOpen","notifications","isLoading","showTour","uiSlice","name","reducers","toggleTheme","state","setItem","setTheme","action","payload","toggleSidebar","setSidebarOpen","addNotification","push","id","Date","now","removeNotification","filter","notification","clearNotifications","setLoading","completeTour","resetTour","actions","reducer"],"sources":["C:/Users/Rajtanu/Documents/Desktop/Folders/Files/Hack4Bengal/Round 1/JobSecure/frontend/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  theme: localStorage.getItem('theme') || 'light',\r\n  sidebarOpen: false,\r\n  notifications: [],\r\n  isLoading: false,\r\n  showTour: localStorage.getItem('showTour') !== 'false', // Default to true for new users\r\n};\r\n\r\nexport const uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\r\n      localStorage.setItem('theme', state.theme);\r\n    },\r\n    setTheme: (state, action) => {\r\n      state.theme = action.payload;\r\n      localStorage.setItem('theme', action.payload);\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    addNotification: (state, action) => {\r\n      state.notifications.push({\r\n        id: Date.now(),\r\n        ...action.payload,\r\n      });\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        (notification) => notification.id !== action.payload\r\n      );\r\n    },\r\n    clearNotifications: (state) => {\r\n      state.notifications = [];\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    completeTour: (state) => {\r\n      state.showTour = false;\r\n      localStorage.setItem('showTour', 'false');\r\n    },\r\n    resetTour: (state) => {\r\n      state.showTour = true;\r\n      localStorage.setItem('showTour', 'true');\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleTheme,\r\n  setTheme,\r\n  toggleSidebar,\r\n  setSidebarOpen,\r\n  addNotification,\r\n  removeNotification,\r\n  clearNotifications,\r\n  setLoading,\r\n  completeTour,\r\n  resetTour,\r\n} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;EAC/CC,WAAW,EAAE,KAAK;EAClBC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAEL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,OAAO,CAAE;AAC1D,CAAC;AAED,OAAO,MAAMK,OAAO,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAE,IAAI;EACVT,YAAY;EACZU,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtBA,KAAK,CAACX,KAAK,GAAGW,KAAK,CAACX,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MACxDC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,KAAK,CAACX,KAAK,CAAC;IAC5C,CAAC;IACDa,QAAQ,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC3BH,KAAK,CAACX,KAAK,GAAGc,MAAM,CAACC,OAAO;MAC5Bd,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEE,MAAM,CAACC,OAAO,CAAC;IAC/C,CAAC;IACDC,aAAa,EAAGL,KAAK,IAAK;MACxBA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACxC,CAAC;IACDc,cAAc,EAAEA,CAACN,KAAK,EAAEG,MAAM,KAAK;MACjCH,KAAK,CAACR,WAAW,GAAGW,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,eAAe,EAAEA,CAACP,KAAK,EAAEG,MAAM,KAAK;MAClCH,KAAK,CAACP,aAAa,CAACe,IAAI,CAAC;QACvBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACd,GAAGR,MAAM,CAACC;MACZ,CAAC,CAAC;IACJ,CAAC;IACDQ,kBAAkB,EAAEA,CAACZ,KAAK,EAAEG,MAAM,KAAK;MACrCH,KAAK,CAACP,aAAa,GAAGO,KAAK,CAACP,aAAa,CAACoB,MAAM,CAC7CC,YAAY,IAAKA,YAAY,CAACL,EAAE,KAAKN,MAAM,CAACC,OAC/C,CAAC;IACH,CAAC;IACDW,kBAAkB,EAAGf,KAAK,IAAK;MAC7BA,KAAK,CAACP,aAAa,GAAG,EAAE;IAC1B,CAAC;IACDuB,UAAU,EAAEA,CAAChB,KAAK,EAAEG,MAAM,KAAK;MAC7BH,KAAK,CAACN,SAAS,GAAGS,MAAM,CAACC,OAAO;IAClC,CAAC;IACDa,YAAY,EAAGjB,KAAK,IAAK;MACvBA,KAAK,CAACL,QAAQ,GAAG,KAAK;MACtBL,YAAY,CAACW,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;IAC3C,CAAC;IACDiB,SAAS,EAAGlB,KAAK,IAAK;MACpBA,KAAK,CAACL,QAAQ,GAAG,IAAI;MACrBL,YAAY,CAACW,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXF,WAAW;EACXG,QAAQ;EACRG,aAAa;EACbC,cAAc;EACdC,eAAe;EACfK,kBAAkB;EAClBG,kBAAkB;EAClBC,UAAU;EACVC,YAAY;EACZC;AACF,CAAC,GAAGtB,OAAO,CAACuB,OAAO;AAEnB,eAAevB,OAAO,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}