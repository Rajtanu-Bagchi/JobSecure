{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../utils/axiosConfig';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user || null,\n  isAuthenticated: !!user,\n  isLoading: false,\n  error: null\n};\n\n// Register user\nexport const registerUser = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Registration failed';\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const loginUser = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    console.log('Attempting login with:', {\n      ...userData,\n      password: '********'\n    });\n    const response = await api.post('/auth/login', userData);\n    console.log('Login response:', response.data);\n    if (response.data) {\n      // Make sure to properly structure the data before storing\n      const dataToStore = {\n        ...response.data,\n        // If the user data isn't at the top level but nested\n        user: response.data.user || response.data\n      };\n      console.log('Storing in localStorage:', dataToStore);\n      localStorage.setItem('user', JSON.stringify(dataToStore));\n      return dataToStore;\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Login error details:', error);\n    const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Login failed';\n    console.log('Returning error message:', message);\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logoutUser = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await api.get('/auth/logout');\n    localStorage.removeItem('user');\n  } catch (error) {\n    console.error('Logout error:', error);\n    // Still remove from localStorage even if API call fails\n    localStorage.removeItem('user');\n  }\n});\n\n// Verify email with OTP\nexport const verifyEmail = createAsyncThunk('auth/verifyEmail', async (verificationData, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/verify-email', verificationData);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Email verification failed';\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register cases\n    .addCase(registerUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Login cases\n    .addCase(loginUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Logout case\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Email verification cases\n    .addCase(verifyEmail.pending, state => {\n      state.isLoading = true;\n    }).addCase(verifyEmail.fulfilled, (state, action) => {\n      state.isLoading = false;\n      if (state.user) {\n        state.user.emailVerified = true;\n      }\n    }).addCase(verifyEmail.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","user","JSON","parse","localStorage","getItem","initialState","isAuthenticated","isLoading","error","registerUser","userData","thunkAPI","response","post","data","setItem","stringify","_error$response","_error$response$data","message","rejectWithValue","loginUser","console","log","password","dataToStore","_error$response2","_error$response2$data","logoutUser","_","get","removeItem","verifyEmail","verificationData","_error$response3","_error$response3$data","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","emailVerified","actions","reducer"],"sources":["C:/Users/Rajtanu/Documents/Desktop/Folders/Files/Hack4Bengal/Round 1/JobSecure/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../utils/axiosConfig';\r\n\r\n// Get user from localStorage\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user: user || null,\r\n  isAuthenticated: !!user,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Register user\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Registration failed';\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/login',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      console.log('Attempting login with:', {...userData, password: '********'});\r\n      const response = await api.post('/auth/login', userData);\r\n      console.log('Login response:', response.data);\r\n      \r\n      if (response.data) {\r\n        // Make sure to properly structure the data before storing\r\n        const dataToStore = {\r\n          ...response.data,\r\n          // If the user data isn't at the top level but nested\r\n          user: response.data.user || response.data\r\n        };\r\n        \r\n        console.log('Storing in localStorage:', dataToStore);\r\n        localStorage.setItem('user', JSON.stringify(dataToStore));\r\n        return dataToStore;\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Login error details:', error);\r\n      const message = error.response?.data?.message || error.message || 'Login failed';\r\n      console.log('Returning error message:', message);\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Logout user\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      await api.get('/auth/logout');\r\n      localStorage.removeItem('user');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      // Still remove from localStorage even if API call fails\r\n      localStorage.removeItem('user');\r\n    }\r\n  }\r\n);\r\n\r\n// Verify email with OTP\r\nexport const verifyEmail = createAsyncThunk(\r\n  'auth/verifyEmail',\r\n  async (verificationData, thunkAPI) => {\r\n    try {\r\n      const response = await api.post('/auth/verify-email', verificationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || error.message || 'Email verification failed';\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Register cases\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Login cases\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Logout case\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Email verification cases\r\n      .addCase(verifyEmail.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(verifyEmail.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        if (state.user) {\r\n          state.user.emailVerified = true;\r\n        }\r\n      })\r\n      .addCase(verifyEmail.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}