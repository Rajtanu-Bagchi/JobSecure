{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../utils/axiosConfig';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user || null,\n  isAuthenticated: !!user,\n  isLoading: false,\n  error: null\n};\n\n// Register user\nexport const registerUser = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Registration failed';\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const loginUser = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/login', userData);\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Login failed';\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logoutUser = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await api.get('/auth/logout');\n    localStorage.removeItem('user');\n  } catch (error) {\n    console.error('Logout error:', error);\n    // Still remove from localStorage even if API call fails\n    localStorage.removeItem('user');\n  }\n});\n\n// Verify email with OTP\nexport const verifyEmail = createAsyncThunk('auth/verifyEmail', async (verificationData, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/verify-email', verificationData);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Email verification failed';\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register cases\n    .addCase(registerUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Login cases\n    .addCase(loginUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Logout case\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Email verification cases\n    .addCase(verifyEmail.pending, state => {\n      state.isLoading = true;\n    }).addCase(verifyEmail.fulfilled, (state, action) => {\n      state.isLoading = false;\n      if (state.user) {\n        state.user.emailVerified = true;\n      }\n    }).addCase(verifyEmail.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","user","JSON","parse","localStorage","getItem","initialState","isAuthenticated","isLoading","error","registerUser","userData","thunkAPI","response","post","data","setItem","stringify","_error$response","_error$response$data","message","rejectWithValue","loginUser","_error$response2","_error$response2$data","logoutUser","_","get","removeItem","console","verifyEmail","verificationData","_error$response3","_error$response3$data","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","emailVerified","actions","reducer"],"sources":["C:/Users/Rajtanu/Documents/Desktop/Folders/Files/Hack4Bengal/Round 1/JobSecure/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../utils/axiosConfig';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst initialState = {\n  user: user || null,\n  isAuthenticated: !!user,\n  isLoading: false,\n  error: null,\n};\n\n// Register user\nexport const registerUser = createAsyncThunk(\n  'auth/register',\n  async (userData, thunkAPI) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    } catch (error) {\n      const message = error.response?.data?.message || error.message || 'Registration failed';\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n// Login user\nexport const loginUser = createAsyncThunk(\n  'auth/login',\n  async (userData, thunkAPI) => {\n    try {\n      const response = await api.post('/auth/login', userData);\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    } catch (error) {\n      const message = error.response?.data?.message || error.message || 'Login failed';\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n// Logout user\nexport const logoutUser = createAsyncThunk(\n  'auth/logout',\n  async (_, thunkAPI) => {\n    try {\n      await api.get('/auth/logout');\n      localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still remove from localStorage even if API call fails\n      localStorage.removeItem('user');\n    }\n  }\n);\n\n// Verify email with OTP\nexport const verifyEmail = createAsyncThunk(\n  'auth/verifyEmail',\n  async (verificationData, thunkAPI) => {\n    try {\n      const response = await api.post('/auth/verify-email', verificationData);\n      return response.data;\n    } catch (error) {\n      const message = error.response?.data?.message || error.message || 'Email verification failed';\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Register cases\n      .addCase(registerUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n        state.user = null;\n        state.isAuthenticated = false;\n      })\n      // Login cases\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n        state.user = null;\n        state.isAuthenticated = false;\n      })\n      // Logout case\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.user = null;\n        state.isAuthenticated = false;\n      })\n      // Email verification cases\n      .addCase(verifyEmail.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(verifyEmail.fulfilled, (state, action) => {\n        state.isLoading = false;\n        if (state.user) {\n          state.user.emailVerified = true;\n        }\n      })\n      .addCase(verifyEmail.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}