{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token in all requests\napi.interceptors.request.use(config => {\n  // Get token from localStorage\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  // If token exists, add to headers\n  if (user) {\n    // Handle both possible formats: { token } or { token, user }\n    const token = user.token || user.data && user.data.token;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized errors (token expired)\n  if (error.response && error.response.status === 401) {\n    // Clear localStorage and redirect to login\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Handle 403 Forbidden errors (insufficient permissions)\n  if (error.response && error.response.status === 403) {\n    console.error('Permission denied:', error.response.data.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","data","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","console","message"],"sources":["C:/Users/Rajtanu/Documents/Desktop/Folders/Files/Hack4Bengal/Round 1/JobSecure/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include auth token in all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Get token from localStorage\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    // If token exists, add to headers\r\n    if (user) {\r\n      // Handle both possible formats: { token } or { token, user }\r\n      const token = user.token || (user.data && user.data.token);\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle common errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle 401 Unauthorized errors (token expired)\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear localStorage and redirect to login\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Handle 403 Forbidden errors (insufficient permissions)\r\n    if (error.response && error.response.status === 403) {\r\n      console.error('Permission denied:', error.response.data.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;;EAErD;EACA,IAAIJ,IAAI,EAAE;IACR;IACA,MAAMK,KAAK,GAAGL,IAAI,CAACK,KAAK,IAAKL,IAAI,CAACM,IAAI,IAAIN,IAAI,CAACM,IAAI,CAACD,KAAM;IAC1D,IAAIA,KAAK,EAAE;MACTN,MAAM,CAACJ,OAAO,CAACY,aAAa,GAAG,UAAUF,KAAK,EAAE;IAClD;EACF;EAEA,OAAON,MAAM;AACf,CAAC,EACAS,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACI,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC1Ba,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;;EAEA;EACA,IAAIR,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnDK,OAAO,CAACT,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACG,QAAQ,CAACL,IAAI,CAACY,OAAO,CAAC;EAClE;EAEA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}